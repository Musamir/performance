package encoding_decoding

//easyjson:json
//Example ...
type Example struct {
	A int32    `json:"a"`
	B string   `json:"b"`
	C []int32  `json:"c"`
	D []string `json:"d"`
}

func (ex *Example) toProtoExample() *ProtoExample {
	return &ProtoExample{
		A: ex.A,
		B: ex.B,
		C: ex.C,
		D: ex.D,
	}
}

func toExample(protoData *ProtoExample) *Example {
	return &Example{
		A: protoData.A,
		B: protoData.B,
		C: protoData.C,
		D: protoData.D,
	}
}

//ExampleData ...
var ExampleData = Example{
	A: 10,
	B: "20",
	C: []int32{1, 2, 3, 4, 5},
	D: []string{"12", "23", "34", "45", "56"},
}

//ExampleProtoData ...
var ExampleProtoData = *ExampleData.toProtoExample()

var jsonEncoded = []byte{0x7b, 0x22, 0x61, 0x22, 0x3a, 0x31, 0x30, 0x2c, 0x22, 0x62, 0x22, 0x3a, 0x22, 0x32, 0x30, 0x22, 0x2c, 0x22, 0x63, 0x22, 0x3a, 0x5b, 0x31, 0x2c, 0x32, 0x2c, 0x33, 0x2c, 0x34, 0x2c, 0x35, 0x5d, 0x2c, 0x22, 0x64, 0x22, 0x3a, 0x5b, 0x22, 0x31, 0x32, 0x22, 0x2c, 0x22, 0x32, 0x33, 0x22, 0x2c, 0x22, 0x33, 0x34, 0x22, 0x2c, 0x22, 0x34, 0x35, 0x22, 0x2c, 0x22, 0x35, 0x36, 0x22, 0x5d, 0x7d, 0xa}
var jsonDecoded = ExampleData
var jsonMarshaled = []byte{0x7b, 0x22, 0x61, 0x22, 0x3a, 0x31, 0x30, 0x2c, 0x22, 0x62, 0x22, 0x3a, 0x22, 0x32, 0x30, 0x22, 0x2c, 0x22, 0x63, 0x22, 0x3a, 0x5b, 0x31, 0x2c, 0x32, 0x2c, 0x33, 0x2c, 0x34, 0x2c, 0x35, 0x5d, 0x2c, 0x22, 0x64, 0x22, 0x3a, 0x5b, 0x22, 0x31, 0x32, 0x22, 0x2c, 0x22, 0x32, 0x33, 0x22, 0x2c, 0x22, 0x33, 0x34, 0x22, 0x2c, 0x22, 0x34, 0x35, 0x22, 0x2c, 0x22, 0x35, 0x36, 0x22, 0x5d, 0x7d}
var jsonUnmarshaled = ExampleData

var gobEncoded = []byte{0x2f, 0xff, 0x81, 0x3, 0x1, 0x1, 0x7, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x1, 0xff, 0x82, 0x0, 0x1, 0x4, 0x1, 0x1, 0x41, 0x1, 0x4, 0x0, 0x1, 0x1, 0x42, 0x1, 0xc, 0x0, 0x1, 0x1, 0x43, 0x1, 0xff, 0x84, 0x0, 0x1, 0x1, 0x44, 0x1, 0xff, 0x86, 0x0, 0x0, 0x0, 0x15, 0xff, 0x83, 0x2, 0x1, 0x1, 0x7, 0x5b, 0x5d, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x1, 0xff, 0x84, 0x0, 0x1, 0x4, 0x0, 0x0, 0x16, 0xff, 0x85, 0x2, 0x1, 0x1, 0x8, 0x5b, 0x5d, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1, 0xff, 0x86, 0x0, 0x1, 0xc, 0x0, 0x0, 0x21, 0xff, 0x82, 0x1, 0x14, 0x1, 0x2, 0x32, 0x30, 0x1, 0x5, 0x2, 0x4, 0x6, 0x8, 0xa, 0x1, 0x5, 0x2, 0x31, 0x32, 0x2, 0x32, 0x33, 0x2, 0x33, 0x34, 0x2, 0x34, 0x35, 0x2, 0x35, 0x36, 0x0}
var gobDecoded = ExampleData

var protoMarshaled = []byte{0x8, 0xa, 0x12, 0x2, 0x32, 0x30, 0x1a, 0x5, 0x1, 0x2, 0x3, 0x4, 0x5, 0x22, 0x2, 0x31, 0x32, 0x22, 0x2, 0x32, 0x33, 0x22, 0x2, 0x33, 0x34, 0x22, 0x2, 0x34, 0x35, 0x22, 0x2, 0x35, 0x36}
var protoUnmarshaled = ExampleData

func failed(str string, err error) {
	panic(str + " [an error occurred] " + err.Error())
}
